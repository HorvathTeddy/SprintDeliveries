type Item @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String
  description: String
  price: Float!
  dispoID: ID! @index(name: "byDispo")
}

type Basket @model @auth(rules: [{allow: public}]) {
  id: ID!
  BasketItems: [BasketItem] @hasMany(indexName: "byBasket", fields: ["id"])
  userID: ID! @index(name: "byUser")
  dispoID: ID! @index(name: "byDispo")
}

enum OrderStatus {
  NEW
  PREPARING
  READY_FOR_PICKUP
  PICKED_UP
  COMPLETED
}

type OrderItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  orderID: ID! @index(name: "byOrder")
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  Dispo: Dispo @hasOne
  total: Float!
  status: OrderStatus!
  OrderItems: [OrderItem] @hasMany(indexName: "byOrder", fields: ["id"])
}

type BasketItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  basketID: ID! @index(name: "byBasket")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  address: String!
  lat: Float!
  lng: Float!
  Orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
  Baskets: [Basket] @hasMany(indexName: "byUser", fields: ["id"])
  sub: String!
}

type Dispo @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String!
  deliveryFee: Float!
  minDelivTime: Int!
  maxDelivTime: Int!
  rating: Float
  address: String!
  lat: Float
  lng: Float
  Baskets: [Basket] @hasMany(indexName: "byDispo", fields: ["id"])
  Items: [Item] @hasMany(indexName: "byDispo", fields: ["id"])
}
 